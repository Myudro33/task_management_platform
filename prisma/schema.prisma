generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model departments {
  id    Int     @id @unique @default(autoincrement())
  name  String  @db.VarChar(255)
  users users[]
}

model statuses {
  id    Int     @id @unique @default(autoincrement())
  name  String  @db.VarChar(255)
  tasks tasks[]
}

model files {
  id         Int    @id @unique @default(autoincrement())
  taskId     Int
  task       tasks  @relation(fields: [taskId], references: [id])
  filename   String @db.VarChar(255)
  url        String @db.VarChar(255)
  uploadedBy Int
  author     users  @relation(fields: [uploadedBy], references: [id])
}

model comments {
  id        Int    @id @unique @default(autoincrement())
  taskId    Int
  userId    Int
  task      tasks  @relation(fields: [taskId], references: [id])
  user      users  @relation(fields: [userId], references: [id])
  content   String @db.VarChar(255)
  createdAt String @db.VarChar(255)
}

model tasks {
  id          Int        @id @unique @default(autoincrement())
  title       String     @db.VarChar(255)
  description String?    @db.VarChar(255)
  dueDate     String     @db.VarChar(255)
  statusId    Int
  status      statuses   @relation(fields: [statusId], references: [id])
  asigneeId   Int
  createdById Int
  asignee     users      @relation("TasksAsignee", fields: [asigneeId], references: [id])
  createdBy   users      @relation("TasksCreator", fields: [createdById], references: [id])
  files       files[]
  comments    comments[]
}

model roles {
  id    Int     @id @unique @default(autoincrement())
  name  String  @db.VarChar(255)
  users users[]
}

model users {
  id           Int         @id @unique @default(autoincrement())
  name         String?     @db.VarChar(255)
  email        String      @unique @db.VarChar(255)
  password     String      @db.VarChar(255)
  roleId       Int
  roles        roles       @relation(fields: [roleId], references: [id])
  avatar       String?     @db.VarChar(255)
  departmentId Int
  departments  departments @relation(fields: [departmentId], references: [id])
  tasksAsignee tasks[]     @relation("TasksAsignee")
  tasksCreator tasks[]     @relation("TasksCreator")
  files        files[]
  comments     comments[]
}
